# Use graphical install
text

# Setup network to use first interface
network --bootproto=dhcp --activate --hostname=ol9base

# URL based install
url --url=https://yum.oracle.com/repo/OracleLinux/OL9/baseos/latest/x86_64 

# CDROM based install
#cdrom 


# Add additional repos
repo --name="BaseOS" --baseurl=https://yum.oracle.com/repo/OracleLinux/OL9/baseos/latest/x86_64
repo --name="AppStream" --baseurl=https://yum.oracle.com/repo/OracleLinux/OL9/appstream/x86_64
repo --name="Addons" --baseurl=https://yum.oracle.com/repo/OracleLinux/OL9/addons/x86_64
repo --name="KVM" --baseurl=https://yum.oracle.com/repo/OracleLinux/OL9/kvm/utils/x86_64
repo --name="UEKR7" --baseurl=https://yum.oracle.com/repo/OracleLinux/OL9/UEKR7/x86_64
repo --name="EPEL" --baseurl=https://yum.oracle.com/repo/OracleLinux/OL9/developer/EPEL/x86_64


# Shutdown after install
shutdown

%addon com_redhat_kdump --disable
%end

%addon com_redhat_oscap
    content-type = scap-security-guide
    datastream-id = scap_org.open-scap_datastream_from_xccdf_ssg-ol9-xccdf.xml
    xccdf-id = scap_org.open-scap_cref_ssg-ol9-xccdf.xml
    profile = xccdf_org.ssgproject.content_profile_stig_gui
%end

# Keyboard layouts
keyboard --xlayouts='us'
# System language
lang en_US.UTF-8

# Use CDROM installation media


%packages
@^graphical-server-environment
@core
aide
libcap
cloud-init
cloud-utils-growpart
krb5-workstation
nfs-utils
grub2
mdadm
dracut-config-generic
grub2-efi-x64-modules
efibootmgr
parted
gdisk
rsync
tar
vim-enhanced
yum-utils
audispd-plugins
audit
chrony
crypto-policies
fapolicyd
firewalld
gnutls-utils
efibootmgr
libreswan
nss-tools
opensc
openscap
openscap-scanner
openssh-clients
openssh-server
openssl-pkcs11
pcsc-lite
policycoreutils
policycoreutils-python-utils
rng-tools
rsyslog
rsyslog-gnutls
s-nail
scap-security-guide
sudo
tmux
usbguard
-biosdevname
-insights-client
-iprutils
-iwl*firmware
-libdnf-plugin-subscription-manager
-quagga
-rhc
-rsh-server
-sendmail
-subscription-manager
-telnet-server
-tftp-server
-tuned
-vsftpd

%end

# Run the Setup Agent on first boot
firstboot --enable

# Generated using Blivet version 3.6.0
ignoredisk --only-use=vda
# Partition clearing information
clearpart --none --initlabel
# Disk partitioning information
part pv.116 --fstype="lvmpv" --ondisk=vda --size=168800
part /boot --fstype="xfs" --ondisk=vda --size=1024
part /boot/efi --fstype="efi" --ondisk=vda --size=1024
volgroup ol --pesize=4096 pv.116
logvol /var/log/audit --fstype="xfs" --size=5120 --name=var_log_audit --vgname=ol
logvol swap --fstype="swap" --size=4948 --name=swap --vgname=ol
logvol /var/log --fstype="xfs" --size=10240 --name=var_log --vgname=ol
logvol /tmp --fstype="xfs" --size=5120 --name=tmp --vgname=ol
logvol /home --fstype="xfs" --size=10240 --name=home --vgname=ol
logvol /var --fstype="xfs" --size=51200 --name=var --vgname=ol
logvol / --fstype="xfs" --grow --maxsize=71680 --size=1024 --name=root --vgname=ol
logvol /var/tmp --fstype="xfs" --size=10240 --name=var_tmp --vgname=ol

# System timezone
timezone America/New_York --utc

# Root password
rootpw --iscrypted --allow-ssh $6$QkllSAhioa6JNVOQ$KU9vjXDee4Ey9sAdn05HNn7yt1bCTY4Gh5Ci88DbvC88ZCqgSQMYioRit/qxrG2z0ii7Y4UewF.RF9rO0Xsn3.
user --groups=wheel --name=user --password=$6$QkllSAhioa6JNVOQ$KU9vjXDee4Ey9sAdn05HNn7yt1bCTY4Gh5Ci88DbvC88ZCqgSQMYioRit/qxrG2z0ii7Y4UewF.RF9rO0Xsn3. --iscrypted --gecos="user"

%post --erroronfail --log=/root/anaconda-post.log

# Stop dnf from installing weak dependencies
echo "install_weak_deps=False" >> /etc/dnf/dnf.conf

# Make sure subscription-manager and friends stay off even if they get installed later
printf "[main]\nenabled=0\n" > /etc/yum/pluginconf.d/subscription-manager.conf
printf "[main]\nenabled=0\n" > /etc/yum/pluginconf.d/product-id.conf

# Generate new machine-id on first boot
truncate --size 0 /etc/machine-id
# Ensure systemd/random-seed is well, random
truncate --size 0 /var/lib/systemd/random-seed

# simple eth0 config, not hard-coded to the build hardware
rm -f /etc/sysconfig/network-scripts/ifcfg-*
cat > /etc/sysconfig/network-scripts/ifcfg-eth0 << EOF
NAME="eth0"
DEVICE="eth0"
ONBOOT="yes"
NETBOOT="yes"
IPV6INIT="no"
BOOTPROTO="dhcp"
TYPE="Ethernet"
DEFROUTE="yes"
IPV4_FAILURE_FATAL="no"
IPV6_AUTOCONF="no"
IPV6_DEFROUTE="no"
IPV6_FAILURE_FATAL="no"
DHCPV6_DUID="llt"
USERCTL="yes"
PEERDNS="yes"
PERSISTENT_DHCLIENT="1"
EOF

sed -i 's|^HWADDR=.*||' /etc/sysconfig/network-scripts/ifcfg-eth0
rm -f /etc/udev/rules.d/70-persistent-net.rules

# Make sure we do not leave any remnants of other en* behind
# This exists because we build with net.ifnames=1, but boot with net.ifnames=0
rm -f /etc/NetworkManager/system-connections/*


# default rpm keys imported.
rpm --import /etc/pki/rpm-gpg/*


# clean up installation
rm -f /tmp/{ks-script-*,yum.log}
rm -f /root/{anaconda,original}-ks.cfg
rm -rf /var/cache/dnf/*

# Add the root UUID to the kernel parameters
#ROOT_ID=`blkid -s UUID -o value /dev/vda1`
#grubby --update-kernel=ALL --args "root=UUID=${ROOT_ID}"

# Add rd.auto and net.ifnames=0 for Ironic
grubby --update-kernel=ALL --args rd.auto
grubby --update-kernel=ALL --args net.ifnames=0

# Clean up installation
rm -f /tmp/{ks-script-*,yum.log}
#rm -f /root/{anaconda,original}-ks.cfg
rm -rf /var/cache/dnf/*

# Adjust user user to not expire
chage -m 1 -M 90 -d `date +"%Y-%m-%d"` user

# Create authorized key dir for user
mkdir -m0700 -p /home/user/.ssh/

# Write out key
cat <<EEEOOOFFF >/home/user/.ssh/authorized_keys

EEEOOOFFF

# Set permissions
chmod 0600 /home/user/.ssh/authorized_keys
chown 1000:1000 -R /home/user/.ssh

# Fix up selinux context
restorecon -R /home/user/.ssh/

## Create packer dir
#mkdir -p /opt/packer
#chown 1000:1000 /opt/packer

# Setup fapolicyd to allow anything to run for automation stuffs
cat << EOF > /etc/fapolicyd/rules.d/50-automation.rules
allow perm=any all gid=1000 trust=1 : dir=/home/user/.ansible/ # ansible
EOF



# Stamp the build
cat << EOF > /etc/BUILDTIME
Oracle Linux 9 - Gold edition
Built on: `date`
EOF
%end
